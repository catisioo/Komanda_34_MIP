Šis darbs ļauj studentiem pielietot praksē iegūtās zināšanas par pārmeklēšanā sakņotu problēmu risināšanu, izstrādājot spēles programmatūru. Darba izpildei studentu komanda saņem no mācībspēka spēles aprakstu. Studentu komanda var brīvi izvēlēties programmēšanas valodu vai vidi programmatūras izstrādei.

Programmatūrā ir jānodrošina šādas iespējas lietotājam: 

   - izvēlēties, kurš uzsāk spēli: lietotājs vai dators;
   - izvēlēties, kuru algoritmu izmantos dators: Minimaksa algoritmu vai Alfa-beta algoritmu;
   - izpildīt gājienus un redzēt izmaiņas spēles laukumā pēc gājienu (gan lietotāja, gan datora) izpildes;
   - uzsākt spēli atkārtoti pēc kārtējās spēles pabeigšanas.

Programmatūrai ir jānodrošina grafiskā lietotāja saskarne (komandrindiņas spēles netiks pieņemtas). Šajā gadījumā runa nav par sarežģītu, 3D grafisko saskarni, bet gan par vizuālu elementu tādu kā izvēlnes, pogas, teksta lauki, ikonas, saraksti, u.c. izmantošanu. 

Izstrādājot programmatūru, studentu komandai obligāti ir jārealizē:

   - spēles koka vai tā daļas ģenerēšana atkarībā no spēles sarežģītības un studentu komandai pieejamiem skaitļošanas resursiem;
   - heiristiskā novērtējuma funkcijas izstrāde;
   - Minimaks-a algoritms un Alfa-beta algoritms (kas abi var būt realizēti kā Pārlūkošana uz priekšu pār n-gājieniem);
   - 10 eksperimenti ar katru no algoritmiem, fiksējot datora un cilvēka uzvaru skaitu, datora apmeklēto virsotņu skaitu, datora vidējo laiku gājiena izpildei.

Tādējādi izstrādājot darbu, studentu komandai ir jāizpilda šādi soļi:

   - jāsaņem spēle no mācībspēka;
   - jāizvēlas programmēšanas vide/valoda;
   - jāprojektē, jārealizē un jātestē spēle;
   - jāveic eksperimenti ar abiem algoritmiem;
   - jāsagatavo atskaite par izstrādāto spēli un tā ir jāiesniedz e-studiju kursā;
   - jāpiesakās aizstāvēšanas laikam;
   - jāaizstāv izstrādātais darbs.

